name: Production Deployment Pipeline

on:
  pull_request:
    branches: [ main ]
    types: [closed]

jobs:
  deploy-production:
    if: github.event.pull_request.merged == true
    name: Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure Azure credentials
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to AKS Production Cluster
      uses: azure/aks-set-context@v3
      with:
        cluster-name: ${{ secrets.AKS_PRODUCTION_CLUSTER }}
        resource-group: ${{ secrets.AKS_PRODUCTION_RESOURCE_GROUP }}
    
    - name: Deploy Production Application
      run: |
        echo "Deploying to production environment..."
        kubectl apply -f week10/k8s/configmaps.yaml
        kubectl apply -f week10/k8s/secrets-simple.yaml
        kubectl apply -f week10/k8s/product-db.yaml
        kubectl apply -f week10/k8s/order-db.yaml
        kubectl apply -f week10/k8s/customer-db.yaml
        kubectl apply -f week10/k8s/product-service.yaml
        kubectl apply -f week10/k8s/order-service.yaml
        kubectl apply -f week10/k8s/customer-service.yaml
        kubectl apply -f week10/k8s/frontend.yaml
    
    - name: Wait for production services
      run: |
        echo "Waiting for production services to be ready..."
        kubectl wait --for=condition=ready pod -l app=product-service --timeout=600s
        kubectl wait --for=condition=ready pod -l app=order-service --timeout=600s
        kubectl wait --for=condition=ready pod -l app=customer-service --timeout=600s
        kubectl wait --for=condition=ready pod -l app=frontend --timeout=600s
    
    - name: Verify production deployment
      run: |
        echo "Production deployment completed successfully!"
        kubectl get services
        kubectl get pods